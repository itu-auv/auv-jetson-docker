# Copyright (c) 2020, NVIDIA CORPORATION. All rights reserved.
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
# This dockerfile is retrieved from https://github.com/dusty-nv/jetson-containers.git

#
# this dockerfile roughly follows the 'Installing from source' from:
#   http://wiki.ros.org/melodic/Installation/Source
#
# ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.5.0
ARG BASE_IMAGE=ghcr.io/itu-auv/auv-jetson-docker:noetic-base
FROM ${BASE_IMAGE}

ARG ROS_PKG=ros_base
ENV ROS_DISTRO=noetic
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
ENV ROS_PYTHON_VERSION=3

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /workspace

# RUN ln -sf /usr/bin/python3 /usr/bin/python && \
#     ln -sf /usr/bin/pip3 /usr/bin/pip
#     # update-alternatives --remove python /usr/bin/python2
#     # update-alternatives --install /usr/bin/python python /usr/bin/python3 10

#
# add the ROS deb repo to the apt sources list
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
          git \
          cmake \
          build-essential \
          curl \
          wget \
          gnupg2 \
          lsb-release \
          ca-certificates

RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -


#
# install bootstrap dependencies
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
          libpython3-dev \
          python3-rosdep \
          python3-rosinstall-generator \
          python3-vcstool \
          build-essential && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*


#
# move to workspace
#
WORKDIR /workspace/ros_catkin_ws

#
# copy rosinstall file
#
RUN rm -rf build_isolated install_isolated devel_isolated src

#
# rosinstall_generator ${ROS_PKG} vision_msgs --rosdistro ${ROS_DISTRO} --deps --tar > ${ROS_DISTRO}-${ROS_PKG}.rosinstall && \
#
RUN rosinstall_generator robot robot_localization perception vision_msgs joy imu_filter_madgwick rosserial --rosdistro ${ROS_DISTRO} --deps --tar > rosinstall.repos

#
# download ros source
#
RUN mkdir src && \
    vcs import --input rosinstall.repos ./src

#
# replacing python37 with python3 to fix (sedmagic)
#
RUN find ./src/vision_opencv -type f -name "CMakeLists.txt" -exec sed -i -e "s/find_package(Boost REQUIRED python37)/find_package(Boost REQUIRED python3)/g" {} \; && \
    find ./src/vision_opencv -type f -name "CMakeLists.txt" -exec sed -i -e "s/find_package(Boost REQUIRED python)/find_package(Boost REQUIRED python3)/g" {} \; && \ 
    find ./src/vision_opencv -name "module.hpp" -exec sed -i -e "s/static void \* do_numpy_import( )/static int do_numpy_import( )/g" {} \; && \
    find ./src/vision_opencv -name "module.hpp" -exec sed -i -e "s/return nullptr;//g" {} \; && \
    sed -i "s/CV_LOAD_IMAGE_UNCHANGED/cv::IMREAD_UNCHANGED/g" src/image_transport_plugins/compressed_depth_image_transport/src/codec.cpp && \
    sed -i "s/CV_IMWRITE_PNG_COMPRESSION/cv::IMWRITE_PNG_COMPRESSION/g" src/image_transport_plugins/compressed_image_transport/src/compressed_publisher.cpp && \
    sed -i "s/CV_IMWRITE_JPEG_QUALITY/cv::IMWRITE_JPEG_QUALITY/g" src/image_transport_plugins/compressed_image_transport/src/compressed_publisher.cpp


RUN apt-get update && \
    apt-get install -y \
        python3-opengl \
        python3-mock \
        python3-rospkg \
        python3-catkin-pkg \
        python3-catkin-tools \
        python3-argcomplete \
        python3-smbus \
        nano \
        iputils-ping \
        net-tools && \
    rm -rf /var/lib/apt/lists/*

#
# rosdep install
#
RUN apt-get update && \
    rosdep install --from-paths ./src --ignore-packages-from-source --rosdistro ${ROS_DISTRO} --skip-keys python3-pykdl --skip-keys=libopencv-dev --skip-keys=cv_bridge --skip-keys=python-opengl --skip-keys=python-mock --skip-keys=python-rospkg --skip-keys=python3-opencv --skip-keys=python-catkin-pkg -y && \
    rm -rf /var/lib/apt/lists/*

    
#
# build ROS source
#
RUN python3 ./src/catkin/bin/catkin_make_isolated --install --install-space ${ROS_ROOT} -DCMAKE_BUILD_TYPE=Release

#
# install Boost 1.71.0
#
RUN wget https://boostorg.jfrog.io/artifactory/main/release/1.71.0/source/boost_1_71_0.tar.bz2 && \
    tar --bzip2 -xf boost_1_71_0.tar.bz2 && \
    cd boost_1_71_0 && \
    ./bootstrap.sh --prefix=/usr && \
    ./b2 && \
    ./b2 install && \
    cd .. && \
    rm -rf boost_1_71_0

#
# setup entrypoint
#
COPY ./entrypoint.sh /entrypoint.sh
RUN echo 'source /opt/ros/${ROS_DISTRO}/setup.bash' >> /root/.bashrc
ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]
WORKDIR /
